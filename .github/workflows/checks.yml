name: Checks

on:
  pull_request:
    branches: [ v3 ]
  push:
    branches: [ ultmaster/pr-checks ]

jobs:
  docker:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Docker build
      run: sudo docker build .

  pylint:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install requirements
      run: pip install -r requirements.txt
    - name: Install pylint
      run: pip install pylint
    - name: Pylint
      run: pylint --rcfile .pylintrc config core flask_server handler

  tests:
    runs-on: ubuntu-20.04
    env:
      LANG: en_US.UTF-8
      LANGUAGE: en_US:en
      LC_ALL: en_US.UTF-8
      USERNAME: ejudge
      PASSWORD: naive
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository ppa:pypy/ppa
        sudo add-apt-repository universe
        sudo apt-get update
        sudo apt-get -y install python2 python2-dev wget flex bison \
          locales python3-software-properties python3 python3-dev python3-pip \
          gcc g++ git libtool cmake openjdk-8-jdk fp-compiler pypy pypy3 \
          libboost-all-dev libprotobuf-dev protobuf-compiler libnl-3-dev libnl-route-3-dev
        sudo locale-gen en_US.UTF-8
    - name: Make temporary folders
      run: mkdir -p run/sub run/log run/tmp
    - name: Add user compiler
      run: sudo useradd -r compiler
    - name: Download testlib
      run: sudo wget https://raw.githubusercontent.com/MikeMirzayanov/testlib/master/testlib.h -O /usr/local/include/testlib.h
    - name: Compile default SPJ
      run: g++ -o lib/defaultspj.bin11 lib/defaultspj.cpp -O2 -std=c++11 -lm
    - name: Install python dependencies
      run: |
        pip3 freeze
        pip3 install -r requirements.txt
    - name: Install nsjail
      run: |
        git submodule update --init --recursive
        cd nsjail
        make
        cd ..
    - name: Submission tests
      run: |
        sudo ./nsjail/setup.sh
        cd tests
        sudo python3 -m unittest test_submission
    - name: Runner tests
      run: |
        sudo ./nsjail/setup.sh
        cd tests
        sudo python3 -m unittest test_runner
    - name: Flask tests
      run: |
        sudo bash run.sh &
        cd tests
        sudo python3 -m unittest test_flask
